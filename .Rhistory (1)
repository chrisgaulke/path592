colnames(big_df) <- paste("patient", 0:100,sep = "_" )
dim(big_df)
colnames(big_df)
big_df
dim(colnames(big_df))
big_df <- matrix(rnbinom(10000, size = .2, prob = .1),
nrow = 100,
ncol = 100)
set.seed(731)
big_df <- matrix(rnbinom(10000, size = .2, prob = .1),
nrow = 100,
ncol = 100)
dim(colnames(big_df))
dim(big_df)
colnames(big_df) <- paste("patient", 0:100,sep = "_" )
rownames(big_df) <- paste("species", 0:100,sep = "_" )
colnames(big_df) <- c(paste("patient", 0:100,sep = "_" ))
length(paste("patient", 0:100,sep = "_" ))
paste("patient", 0:100,sep = "_" )
colnames(big_df) <- paste("patient", 1:100,sep = "_" )
rownames(big_df) <- paste("species", 1:100,sep = "_" )
specnumber(x = df,
MARGIN = 2 #by columns
)
df <- data.frame(patient_1 = c(5,5,5,5,5,5),
patient_2 = c(0,0,0,0,0,1000),
patient_3 = c(0,50,5,100,10,1),
patient_4 = c(0,0,5,5,5,0),
patient_5 = c(100,100,100,100,100,100))
rownames(df) <- c("species_a",
"species_b",
"species_c",
"species_d",
"species_e",
"species_f")
#use random distribution generators to make a neg binomial distributed matrix
#this will be a reasonable-ish approximation of microbiome data
set.seed(731)
big_df <- matrix(rnbinom(10000, size = .2, prob = .1),
nrow = 100,
ncol = 100)
colnames(big_df) <- paste("patient", 1:100,sep = "_" )
rownames(big_df) <- paste("species", 1:100,sep = "_" )
specnumber(x = df,
MARGIN = 2 #by columns
)
specnumber(x = big_df,
MARGIN = 2 #by columns
)
hist(paste("patient", 0:100,sep = "_" ))
hist(specnumber(x = big_df,
MARGIN = 2 #by columns
))
set.seed(731)
hist(specnumber(x = big_df,
MARGIN = 2 #by columns
))
big_df <- matrix(rnbinom(10000, size = .2, prob = .1),
nrow = 100,
ncol = 100)
colnames(big_df) <- paste("patient", 1:100,sep = "_" )
rownames(big_df) <- paste("species", 1:100,sep = "_" )
hist(specnumber(x = big_df,
MARGIN = 2 #by columns
))
big_df
big_df <- matrix(rnbinom(10000, size = .2, prob = .1),
nrow = 100,
ncol = 100)
big_df
colnames(big_df) <- paste("patient", 1:100,sep = "_" )
rownames(big_df) <- paste("species", 1:100,sep = "_" )
specnumber(x = df,
MARGIN = 2 #by columns
)
specnumber(x = big_df,
MARGIN = 2 #by columns
)
hist(specnumber(x = big_df,
MARGIN = 2 #by columns
))
big_df <- matrix(rnbinom(10000, size = .2, prob = .1),
nrow = 100,
ncol = 100)
colnames(big_df) <- paste("patient", 1:100,sep = "_" )
rownames(big_df) <- paste("species", 1:100,sep = "_" )
hist(specnumber(x = big_df,
MARGIN = 2 #by columns
))
set.seed(731)
big_df <- matrix(rnbinom(10000, size = .2, prob = .1),
nrow = 100,
ncol = 100)
colnames(big_df) <- paste("patient", 1:100,sep = "_" )
rownames(big_df) <- paste("species", 1:100,sep = "_" )
hist(specnumber(x = big_df,
MARGIN = 2 #by columns
))
set.seed(731)
big_df <- matrix(rnbinom(10000, size = .2, prob = .1),
nrow = 100,
ncol = 100)
colnames(big_df) <- paste("patient", 1:100,sep = "_" )
rownames(big_df) <- paste("species", 1:100,sep = "_" )
hist(specnumber(x = big_df,
MARGIN = 2 #by columns
))
specnumber(x = df,
MARGIN = 2 #by columns
)
specnumber(x = big_df,
MARGIN = 2 #by columns
)
diversity(df)
diversity(df,index = 2)
diversity(df,
index = "shannon",
MARGIN = 2
)
diversity(big_df,
index = "shannon",
MARGIN = 2
)
rarecurve(x = df, step = 1,sample = 1)
rarecurve(x = df,
step = 1,
sample = 1,label = F
)
rarecurve(x = df,
step = 1,
sample = 1
)
min(colSums(big_df))
min(colSums(big_df)) /10
sample = min(colSums(big_df)) /10
median(min(colSums(big_df)))
median((colSums(big_df)))
sqrt(median((colSums(big_df))))
rarecurve(x = big_df,
step = 1,
sample = sample
)
sample
rarecurve(x = big_df,
step = sample,
sample = sample
)
warnings()
rarecurve(x = big_df,
step = floor(sample),
sample = sample
)
rarecurve(x = big_df,
step = floor(sample),
sample = sample
)
rarecurve(x = big_df,
step = 1,
sample = sample
)
rarecurve(x = big_df,
step = NULL,
sample = sample
)
rarecurve(x = big_df,
step = 1,
sample = sample,label = NULL
)
rarecurve(x = big_df,
step = 1,
sample = sample,
label = "none"
)
rarecurve(x = big_df,
step = 1,
sample = sample,
label = FALSE
)
rarecurve(x = big_df,
step = 1,
# sample = sample,
label = FALSE
)
rarecurve(x = big_df,
step = 10,
label = FALSE
)
rarecurve(x = big_df,
step = 100,
label = FALSE
)
rarecurve(x = big_df,
step = 10,
label = FALSE
)
rarecurve(x = big_df,
step = sample,
label = FALSE
)
rarecurve(x = big_df,
step = floor(sample),
label = FALSE
)
rarecurve(x = df,
step = 1,
)
rarecurve(x = df,
step = 10,
)
#set sample size
sample = min(colSums(big_df)) /10 # you want enough sample points to make smooth
rarecurve(x = big_df,
step = floor(sample),
label = FALSE
)
abline(v = 100)
abline(v = 200)
set.seed(731)
big_df <- matrix(rnbinom(10000, size = .1, prob = .1),
nrow = 100,
ncol = 100)
colnames(big_df) <- paste("patient", 1:100,sep = "_" )
rownames(big_df) <- paste("species", 1:100,sep = "_" )
# Rarefy ------------------------------------------------------------------
#Rarefaction is necessary to conduct alpha diversity analysis
rarecurve(x = df,
step = 10,
)
#set sample size
sample = min(colSums(big_df)) /10 # you want enough sample points to make smooth
rarecurve(x = big_df,
step = floor(sample),
label = FALSE
)
abline(v = 100)
abline(v = 200)
set.seed(731)
big_df <- matrix(rnbinom(10000, size = .3, prob = .1),
nrow = 100,
ncol = 100)
colnames(big_df) <- paste("patient", 1:100,sep = "_" )
rownames(big_df) <- paste("species", 1:100,sep = "_" )
# Rarefy ------------------------------------------------------------------
#Rarefaction is necessary to conduct alpha diversity analysis
rarecurve(x = df,
step = 10,
)
#set sample size
sample = min(colSums(big_df)) /10 # you want enough sample points to make smooth
rarecurve(x = big_df,
step = floor(sample),
label = FALSE
)
abline(v = 100)
abline(v = 200)
big_df <- matrix(rnbinom(10000, size = .2, prob = .5),
nrow = 100,
ncol = 100)
set.seed(731)
big_df <- matrix(rnbinom(10000, size = .2, prob = .5),
nrow = 100,
ncol = 100)
colnames(big_df) <- paste("patient", 1:100,sep = "_" )
rownames(big_df) <- paste("species", 1:100,sep = "_" )
# Rarefy ------------------------------------------------------------------
#Rarefaction is necessary to conduct alpha diversity analysis
rarecurve(x = df,
step = 10,
)
#set sample size
sample = min(colSums(big_df)) /10 # you want enough sample points to make smooth
rarecurve(x = big_df,
step = floor(sample),
label = FALSE
)
abline(v = 100)
abline(v = 200)
big_df
big_df <- matrix(rnbinom(10000, size = .2, prob = .1),
nrow = 100,
ncol = 100)
set.seed(731)
big_df <- matrix(rnbinom(10000, size = .2, prob = .1),
nrow = 100,
ncol = 100)
colnames(big_df) <- paste("patient", 1:100,sep = "_" )
rownames(big_df) <- paste("species", 1:100,sep = "_" )
rarecurve(x = df,
step = 10,
)
#set sample size
sample = min(colSums(big_df)) /10 # you want enough sample points to make smooth
rarecurve(x = big_df,
step = floor(sample),
label = FALSE
)
abline(v = 100)
abline(v = 200)
set.seed(731)
big_df <- matrix(rnbinom(10000, size = .2, prob = .2),
nrow = 100,
ncol = 100)
colnames(big_df) <- paste("patient", 1:100,sep = "_" )
rownames(big_df) <- paste("species", 1:100,sep = "_" )
# Rarefy ------------------------------------------------------------------
#Rarefaction is necessary to conduct alpha diversity analysis
rarecurve(x = df,
step = 10,
)
#set sample size
sample = min(colSums(big_df)) /10 # you want enough sample points to make smooth
rarecurve(x = big_df,
step = floor(sample),
label = FALSE
)
abline(v = 100)
abline(v = 200)
set.seed(731)
big_df <- matrix(rnbinom(10000, size = .2, prob = .05),
nrow = 100,
ncol = 100)
colnames(big_df) <- paste("patient", 1:100,sep = "_" )
rownames(big_df) <- paste("species", 1:100,sep = "_" )
# Rarefy ------------------------------------------------------------------
#Rarefaction is necessary to conduct alpha diversity analysis
rarecurve(x = df,
step = 10,
)
#set sample size
sample = min(colSums(big_df)) /10 # you want enough sample points to make smooth
rarecurve(x = big_df,
step = floor(sample),
label = FALSE
)
abline(v = 100)
abline(v = 200)
set.seed(731)
big_df <- matrix(rnbinom(10000, size = .2, prob = .01),
nrow = 100,
ncol = 100)
colnames(big_df) <- paste("patient", 1:100,sep = "_" )
rownames(big_df) <- paste("species", 1:100,sep = "_" )
# Rarefy ------------------------------------------------------------------
#Rarefaction is necessary to conduct alpha diversity analysis
rarecurve(x = df,
step = 10,
)
#set sample size
sample = min(colSums(big_df)) /10 # you want enough sample points to make smooth
rarecurve(x = big_df,
step = floor(sample),
label = FALSE
)
abline(v = 100)
abline(v = 200)
abline(v = 500)
abline(v = 1000)
min(colSums(big_df))
abline(v = 1100)
hist(colSums(big_df))
big_df.rare <- big_df[,which(colSums(big_df) > 1100)]
dim(big_df.rare)
min(rowSums(big_df.rare))
#remove all species == 0
big_df.rare <- big_df[which(rowSums(big_df) > 0)]
dim(big_df.rare)
library(vegan)
#Make some faux data
df <- data.frame(patient_1 = c(5,5,5,5,5,5),
patient_2 = c(0,0,0,0,0,1000),
patient_3 = c(0,50,5,100,10,1),
patient_4 = c(0,0,5,5,5,0),
patient_5 = c(100,100,100,100,100,100))
rownames(df) <- c("species_a",
"species_b",
"species_c",
"species_d",
"species_e",
"species_f")
#use random distribution generators to make a neg binomial distributed matrix
#this will be a reasonable-ish approximation of microbiome data
set.seed(731)
big_df <- matrix(rnbinom(10000, size = .2, prob = .01),
nrow = 100,
ncol = 100)
colnames(big_df) <- paste("patient", 1:100,sep = "_" )
rownames(big_df) <- paste("species", 1:100,sep = "_" )
# Rarefy ------------------------------------------------------------------
#Rarefaction is necessary to conduct alpha diversity analysis
rarecurve(x = df,
step = 10,
)
#set sample size
sample = min(colSums(big_df)) /10 # you want enough sample points to make smooth
rarecurve(x = big_df,
step = floor(sample),
label = FALSE
)
abline(v = 100)
abline(v = 500)
abline(v = 1100) # looks like a few sample
#remove all samples < 1100
big_df.rare <- big_df[,which(colSums(big_df) > 1099)]
#remove all species == 0
big_df.rare <- big_df[which(rowSums(big_df) > 0),]
big_df.rare
big_df.rare <- rarefy(big_df.rare,MARGIN = 2, sample = 1100)
colSums(big_df) > 1099
all(colSums(big_df) > 1099)
all(colSums(big_df.rare) > 1099)
all(colSums(big_df.rare))
colSums(big_df.rare)
big_df.rare
set.seed(731)
big_df <- matrix(rnbinom(10000, size = .2, prob = .01),
nrow = 100,
ncol = 100)
colnames(big_df) <- paste("patient", 1:100,sep = "_" )
rownames(big_df) <- paste("species", 1:100,sep = "_" )
# Rarefy ------------------------------------------------------------------
#Rarefaction is necessary to conduct alpha diversity analysis
rarecurve(x = df,
step = 10,
)
#set sample size
sample = min(colSums(big_df)) /10 # you want enough sample points to make smooth
rarecurve(x = big_df,
step = floor(sample),
label = FALSE
)
abline(v = 100)
abline(v = 500)
abline(v = 1100) # looks like a few sample
#remove all samples < 1100
big_df.rare <- big_df[,which(colSums(big_df) > 1099)]
dim(big_df.rare)
#remove all species == 0
big_df.rare <- big_df[which(rowSums(big_df) > 0),]
dim(big_df.rare)
#remove all samples < 1100
big_df.rare <- big_df[,which(colSums(big_df) > 1099)]
#remove all species == 0
big_df.rare <- big_df.rare[which(rowSums(big_df) > 0),]
dim(big_df.rare)
big_df.rare <- rarefy(big_df.rare,MARGIN = 2, sample = 1100)
big_df.rare
#remove all samples < 1100
big_df.rare <- big_df[,which(colSums(big_df) > 1099)]
#remove all species == 0
big_df.rare <- big_df.rare[which(rowSums(big_df) > 0),]
big_df.rare <- rrarefy(big_df.rare,MARGIN = 2, sample = 1100)
big_df.rare <- rrarefy(big_df.rare, sample = 1100)
big_df.rare <- rrarefy(t(big_df.rare), sample = 1100)
#remove all samples < 1100
big_df.rare <- big_df[,which(colSums(big_df) > 1099)]
#remove all species == 0
big_df.rare <- big_df.rare[which(rowSums(big_df) > 0),]
big_df.rare <- rrarefy(t(big_df.rare), sample = 1100)
View(big_df.rare)
colSums(big_df.rare)
all(colSums(big_df.rare))
all(colSums(big_df.rare) > 0)
all(colSums(big_df.rare) > 0)
specnumber(x = df,
MARGIN = 2 #by columns
)
specnumber(x = big_df,
MARGIN = 2 #by columns
)
specnumber(x = df,
MARGIN = 2 #by columns
)
specnumber(x = big_df,
MARGIN = 2 #by columns
)
#rarefied
specnumber(x = big_df.rare,
MARGIN = 2 #by columns
)
hist(big_df.rare)
hist(big_df)
plot(hist(big_df), hist(big_df))
#unrarefied
big_df.richness <- specnumber(x = big_df,
MARGIN = 2 #by columns
)
#rarefied
big_df_rare.richness <- specnumber(x = big_df.rare,
MARGIN = 2 #by columns
)
hist(big_df.richness)
hist(big_df_rare.richness)
diversity(df,
index = "shannon",
MARGIN = 2
)
diversity(df,
index = "shannon",
MARGIN = 2
)
big_df.shannon <- diversity(big_df,
index = "shannon",
MARGIN = 2
)
big_df_rare.shannon <- diversity(big_df.rare,
index = "shannon",
MARGIN = 2
)
hist(big_df.shannon)
hist(big_df_rare.shannon)
cor(big_df.rare, big_df)
(big_df.rare, big_df)
